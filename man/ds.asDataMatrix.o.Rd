% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ds.asDataMatrix.o.R
\name{ds.asDataMatrix.o}
\alias{ds.asDataMatrix.o}
\title{ds.asDataMatrix.o calling assign function asDataMatrixDS.o}
\usage{
ds.asDataMatrix.o(x.name = NULL, newobj = NULL, datasources = NULL)
}
\arguments{
\item{x.name}{the name of the input object to be coerced to a data.matrix.
Must be specified in inverted commas eg x.name="name.of.object"}

\item{newobj}{the name of the new output variable specified
in inverted commas. If this argument is set to NULL, the name
of the new variable is defaulted to <x.name>.mat}

\item{datasources}{a list of \code{\link{DSConnection-class}} objects obtained after login. If the <datasources>
argument is not specified the default set of connections will be used: see \link{datashield.connections_default}.}
}
\value{
the object specified by the <newobj> argument (or by default <x.name>.mat
if the <newobj> argument is NULL) which is written to the serverside.
In addition, two validity messages are returned
indicating whether <newobj> has been created in each data source and if so whether
it is in a valid form. If its form is not valid in at least one study there may
be a studysideMessage that can explain the error in creating
the full output object. As well as appearing on the screen at run time,if you wish to
see the relevant studysideMessages at a later date you can use the {ds.message.o}
function. If you type ds.message.o(<newobj>) it will print out the relevant
studysideMessage from any datasource in which there was an error in creating <newobj>
and a studysideMessage was saved. If there was no error and <newobj> was created
without problems no studysideMessage will have been saved and ds.message.o(<newobj>)
will return the message: "ALL OK: there are no studysideMessage(s) on this datasource".
}
\description{
Coerces an R object into a matrix maintaining original
class for all columns in data.frames
}
\details{
This function is based on the native R function {data.matrix}
If applied to a data.frame, the native R function {as.matrix}
converts all columns into character class. In contrast, if applied to
a data.frame the native R function {data.matrix} converts
the data.frame to a matrix but maintains all data columns in their
original class
}
\author{
Paul Burton, for DataSHIELD Development Team
}
